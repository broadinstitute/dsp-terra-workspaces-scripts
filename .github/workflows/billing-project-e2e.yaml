name: Create billing project test
on:
  push:
    branches:
      - arh-testing

permissions:
  id-token: write
  contents: read

env:
  MRG_ID: billing-testing-${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  main-ci:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: ./tools
    steps:
      - uses: actions/checkout@v2
      #----------------------------------------------
      #  -----  login w/azure  -----
      #----------------------------------------------
      - name: Azure CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      #----------------------------------------------
      #  -----  login w/google  -----
      #----------------------------------------------
      - name: gcloud CLI login
        id: gcloud-auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.DEV_GCLOUD_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --no-dev
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      # run the script
      #----------------------------------------------
      - name: Run script
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          source .venv/bin/activate
          python -m mrg -e dev create -d $MRG_ID -s $AZURE_SUBSCRIPTION_ID -r billing-project-testing -u monster.aherbst.dev@gmail.com
          python -m billing_profiles -e dev mrg -s $AZURE_SUBSCRIPTION_ID 
